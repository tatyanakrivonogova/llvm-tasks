; ModuleID = 'new_opts/opt4/test.ll'
source_filename = "new_opts/opt4/test.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z5test1ii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %cmp1 = icmp eq i32 %0, 0
  %cmp2 = icmp eq i32 %1, 0
  %cmp = xor i1 %cmp1, %cmp2
  %3 = zext i1 %cmp to i32
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z5test2ii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %cmp1 = icmp eq i32 %0, 0
  %cmp2 = icmp eq i32 %1, 0
  %cmp = xor i1 %cmp1, %cmp2
  %3 = zext i1 %cmp to i32
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z5test3ii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %cmp1 = icmp eq i32 %0, 0
  %cmp2 = icmp eq i32 %1, 0
  %cmp = xor i1 %cmp1, %cmp2
  %3 = zext i1 %cmp to i32
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z5test4ii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %cmp1 = icmp eq i32 %0, 0
  %cmp2 = icmp eq i32 %1, 0
  %cmp = xor i1 %cmp1, %cmp2
  %3 = zext i1 %cmp to i32
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z5test5ii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %cmp1 = icmp eq i32 %0, 0
  %cmp2 = icmp eq i32 %1, 0
  %cmp = xor i1 %cmp1, %cmp2
  %3 = zext i1 %cmp to i32
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z5test6ii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %cmp1 = icmp eq i32 %0, 0
  %cmp2 = icmp eq i32 %1, 0
  %cmp = xor i1 %cmp1, %cmp2
  %3 = zext i1 %cmp to i32
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z5test7ii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %cmp1 = icmp eq i32 %0, 0
  %cmp2 = icmp eq i32 %1, 0
  %cmp = xor i1 %cmp1, %cmp2
  %3 = zext i1 %cmp to i32
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z5test8ii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %cmp1 = icmp eq i32 %0, 0
  %cmp2 = icmp eq i32 %1, 0
  %cmp = xor i1 %cmp1, %cmp2
  %3 = zext i1 %cmp to i32
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z5test9ii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %cmp1 = icmp eq i32 %0, 0
  %cmp2 = icmp eq i32 %1, 0
  %cmp = xor i1 %cmp1, %cmp2
  %3 = zext i1 %cmp to i32
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z6test10ii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %cmp1 = icmp eq i32 %0, 0
  %cmp2 = icmp eq i32 %1, 0
  %cmp = xor i1 %cmp1, %cmp2
  %3 = zext i1 %cmp to i32
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z6test11iiii(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 {
  %5 = mul nsw i32 %1, %0
  %6 = icmp eq i32 %5, 0
  %7 = mul nsw i32 %3, %2
  %8 = icmp eq i32 %7, 0
  %9 = xor i1 %6, %8
  %10 = zext i1 %9 to i32
  ret i32 %10
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z6test19iiii(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 {
  %5 = mul nsw i32 %1, %0
  %6 = icmp eq i32 %5, 0
  %7 = mul nsw i32 %3, %2
  %8 = icmp eq i32 %7, 0
  %9 = xor i1 %6, %8
  %10 = zext i1 %9 to i32
  ret i32 %10
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 19.0.0git (git@github.com:tatyanakrivonogova/llvm_optimisations.git dbfae6c1c7b358ed9c065181e8a3ebc61568248d)"}
